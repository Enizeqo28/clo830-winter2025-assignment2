name: Deploy to ECR and Kubernetes

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build:
    if: github.event.pull_request.merged == true
    name: Build and Push Images
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push web application image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: assignment2-dev-webapp-repo
        APPLICATION_IMAGE_TAG: latest
      run: |
        cd flaskapp/
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$APPLICATION_IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$APPLICATION_IMAGE_TAG

    - name: Build, tag, and push MySQL image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: assignment2-dev-mysql-repo
        MYSQL_IMAGE_TAG: latest
      run: |
        cd flaskapp/
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$MYSQL_IMAGE_TAG -f Dockerfile_mysql .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$MYSQL_IMAGE_TAG

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Kubernetes tools
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Configure Kubernetes context
      run: |
        aws eks update-kubeconfig --name assignment2-cluster --region us-east-1

    - name: Deploy MySQL to Kubernetes
      run: |
        kubectl apply -f Kubernetes/manifests/mysql-deployment.yaml
        kubectl apply -f Kubernetes/manifests/mysql-service.yaml

    - name: Deploy Web App to Kubernetes
      run: |
        kubectl apply -f Kubernetes/manifests/web-app-deployment.yaml
        kubectl apply -f Kubernetes/manifests/web-app-service.yaml

    - name: Verify Deployment
      run: |
        kubectl get pods -A
